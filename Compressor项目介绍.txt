# Compressor项目介绍

Compressor是一个免费开源的文件压缩工具，旨在帮助用户减小文件体积，提高传输效率。

## 核心功能

- **国际化支持**：提供中英文界面切换
- **暗黑模式**：支持明亮/暗黑两种主题切换
- **自定义压缩配置**：允许用户根据需求调整压缩参数
- **图像压缩**：支持PNG、JPEG、GIF格式压缩，并可转换为WebP格式
- **实时压缩进度**：通过WebSocket实现压缩进度实时显示

## 技术架构

### 前端架构
- **核心框架**：React 18 + Redux Toolkit 状态管理
- **构建工具**：Vite 提供快速开发体验
- **样式方案**：@vanilla-extract/css + Ant Design UI组件库
- **网络通信**：Axios处理HTTP请求，Socket.io-client实现WebSocket通信
- **其他依赖**：i18next(国际化)、jszip(压缩包处理)、file-saver(文件下载)

### 后端架构
- **服务器框架**：Node.js v16.x + Nest.js
- **通信模块**：Socket.io 实现实时通信
- **压缩引擎**：Imagemin系列库(imagemin-pngquant、imagemin-mozjpeg等)
- **API文档**：Swagger自动生成接口文档

## 项目结构

### 前端主要目录
- `src/components`：可复用组件
- `src/pages`：页面组件
- `src/store`：Redux状态管理
- `src/i18n`：国际化配置
- `src/styles`：全局样式
- `src/routes`：路由配置

### 后端主要模块
- `modules/files`：文件处理和压缩核心功能
- `modules/events`：事件和WebSocket处理
- `core`：核心过滤器、拦截器等

## 工作流程
1. 用户上传文件到前端界面
2. 前端通过Socket.io与后端建立连接
3. 后端接收文件并使用对应压缩算法处理
4. 压缩过程通过WebSocket实时反馈给前端
5. 压缩完成后，前端显示结果并提供下载选项

## 未来规划
项目计划添加视频压缩、文档压缩和用户系统等功能，进一步丰富工具的实用性。